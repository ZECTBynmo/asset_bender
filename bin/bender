#! /usr/bin/env ruby

require 'bundler/setup'
require 'gli'
require 'sprockets'
require 'sprockets-sass'
require 'sprockets-helpers'

bender_path = File.expand_path(File.join(File.dirname(__FILE__), '../lib/'))
$LOAD_PATH.unshift(bender_path) unless $LOAD_PATH.include?(bender_path)

require 'asset_bender'
require 'asset_bender/commands'

include GLI::App
program_desc 'Asset Bender'
 
# flag [:t,:tasklist], :default_value => File.join(ENV['HOME'],'.todolist')
 
# pre do |global_options,command,options,args|
#   $todo_list = Hacer::Todolist.new(global_options[:tasklist])
# end
 
desc 'Precompiles project'
long_desc 'Compiles all of the files in a project.'

command :precompile do |c|
  c.flag [:o,:output]

  c.action do |global_options, options, args|
    # print "\n", "global_options:  #{global_options.inspect}", "\n\n"
    print "\n", "options:  #{options.inspect}", "\n\n"
    print "\n", "args:  #{args.inspect}", "\n\n"

    help_now!('Must include path to precompile') if args.empty?
    help_now!('Must include output directory') unless options[:output]

    bender_command = AssetBender::Commands::Precompile.new global_options, options, args
    bender_command.run 
  end
end

exit run(ARGV)