#! /usr/bin/env ruby

require 'bundler/setup'
require 'gli'
require 'sprockets'
require 'compass'
require 'sprockets-sass'
require 'sprockets-helpers'

bender_path = File.expand_path(File.join(File.dirname(__FILE__), '../lib/'))
$LOAD_PATH.unshift(bender_path) unless $LOAD_PATH.include?(bender_path)

require 'asset_bender'
require 'asset_bender/commands'

include GLI::App
program_desc 'Asset Bender'
 
# flag [:t,:tasklist], :default_value => File.join(ENV['HOME'],'.todolist')
 
# pre do |global_options,command,options,args|
#   $todo_list = Hacer::Todolist.new(global_options[:tasklist])
# end

 

desc 'Update dependencies'
long_desc 'Updates the dependencies for one more more projects. If no arguments are passed, every project in your configuration is updated. But you can also pass in one or more project names/paths to only update specific projects'

command :update_deps, 'update-deps' do |c|
  c.action do |global_options, options, args|
    bender_command = AssetBender::Commands::UpdateDeps.new global_options, options, args
    bender_command.run 
  end
end


desc 'Precompiles project'
long_desc 'Compiles all of the files in a project to a target directory.'

command :precompile do |c|
  c.flag [:t,:target]

  c.action do |global_options, options, args|

    help_now!('Must include path to precompile') if args.empty?
    help_now!('Must include target directory') unless options[:target]

    bender_command = AssetBender::Commands::Precompile.new global_options, options, args
    bender_command.run 
  end
end

exit run(ARGV)